{"version":3,"sources":["assets/mouse.svg","components/Menu.js","components/Cell.js","components/Board.js","Minesweeper.js","index.js"],"names":["module","exports","Menu","props","state","difficulty","size","handleChange","bind","handleSubmit","event","target","name","value","this","setState","startGame","preventDefault","className","onSubmit","onChange","React","Component","Cell","handleClick","x","y","type","onCellClick","isOpened","isMarked","isMine","getCellModifier","onClick","onContextMenu","Board","markersLeft","mines","isGameOver","isWon","board","handleCellClick","openCell","goToMenu","emptyBoard","generateEmptyBoard","boardWithMines","placeMines","boardWithValues","setValues","rows","columns","i","j","row","Math","floor","random","column","cell","numberOfMinesAround","getAdjacentCells","filter","length","adjacentCells","dx","dy","push","Fragment","map","rowIndex","key","cellIndex","updatedBoard","modifiedBoard","endGame","examineBoard","cells","flat","cellsCount","numberOfMarked","changeGameState","isGameRunning","drawBoard","src","mouseImage","alt","Minesweeper","config","gameState","newGameState","isMenu","isGame","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.7e48967b.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/mouse.edcc802a.svg\";","import React from 'react';\n\nclass Menu extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      difficulty: 10,\n      size: 8\n    }\n\n    this.handleChange = this.handleChange.bind(this);\n    this.handleSubmit = this.handleSubmit.bind(this);\n  }\n\n  handleChange(event) {\n    const target = event.target;\n    const name = target.name;\n    const value = target.value;\n\n    this.setState({\n      [name]: value\n    });\n  }\n\n  handleSubmit(event) {\n    const { startGame } = this.props;\n    event.preventDefault();\n\n    startGame(this.state);\n  }\n\n  render() {\n    return (\n      <div className=\"menu\">\n        <h1 className=\"game-title\">The Minesweeper</h1>\n        <form className=\"form-config\" onSubmit={this.handleSubmit}>\n          <label className=\"form-config__label\">\n            Size\n            <select className=\"form-config__select\" name=\"size\" value={this.state.size} onChange={this.handleChange}>\n              <option value=\"6\">Tiny</option>\n              <option value=\"8\">Normal</option>\n              <option value=\"10\">Huge</option>\n            </select>\n          </label>\n          <label className=\"form-config__label\">\n            Difficulty\n            <select className=\"form-config__select\" name=\"difficulty\" value={this.state.difficulty} onChange={this.handleChange}>\n              <option value=\"5\">Easy</option>\n              <option value=\"10\">Moderate</option>\n              <option value=\"15\">Hard</option>\n            </select>\n          </label>\n          <button className=\"button button--primary form-config__button\">New Game</button>\n        </form>\n      </div>\n    );\n  }\n}\n\nexport default Menu;","import React from 'react';\n\nclass Cell extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.handleClick = this.handleClick.bind(this);\n  }\n\n  handleClick(event) {\n    const { x, y } = this.props;\n\n    event.preventDefault();\n\n    if (event.type === 'click' || event.type === 'contextmenu') {\n      this.props.onCellClick(event.type, x, y);\n    }\n  }\n\n  getCellModifier() {\n    const { value, isOpened, isMarked, isMine } = this.props;\n\n    if (isMarked) {\n      return 'cell--marked';\n    }\n    if (isMine && isOpened) {\n      return 'cell--mine';\n    }\n    if (!isMarked && isOpened && !value) {\n      return 'cell--empty';\n    }\n    if (!isOpened) {\n      return 'cell--closed';\n    }\n\n    return '';\n  }\n\n  render() {\n    const { value } = this.props;\n    return (\n      <div className={`cell ${this.getCellModifier()}`} onClick={this.handleClick} onContextMenu={this.handleClick}>{value}</div>\n    );\n  }\n}\n\nexport default Cell;","import React from 'react';\nimport Cell from './Cell';\nimport mouseImage from './../assets/mouse.svg';\n\nclass Board extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      markersLeft: props.mines,\n      isGameOver: false,\n      isWon: false,\n      board: null\n    }\n\n    this.handleCellClick = this.handleCellClick.bind(this);\n    this.openCell = this.openCell.bind(this);\n    this.goToMenu = this.goToMenu.bind(this);\n    this.startGame = this.startGame.bind(this);\n  }\n\n  componentDidMount() {\n    this.startGame();\n  }\n\n  startGame() {\n    const emptyBoard = this.generateEmptyBoard();\n    const boardWithMines = this.placeMines(emptyBoard);\n    const boardWithValues = this.setValues(boardWithMines);\n\n    this.setState({\n      board: boardWithValues,\n      isGameOver: false,\n      isWon: false,\n      markersLeft: this.props.mines\n    });\n  }\n\n  generateEmptyBoard() {\n    const { rows, columns } = this.props;\n    const board = [];\n\n    for (let i = 0; i < rows; i++) {\n      board[i] = [];\n      for (let j = 0; j < columns; j++) {\n        board[i][j] = {\n          isOpened: false,\n          isMarked: false,\n          isMine: false,\n          value: ''\n        }\n      }\n    }\n\n    return board;\n  }\n\n  placeMines(board) {\n    let { mines, rows, columns } = this.props;\n    const boardWithMines = [...board];\n\n    while (mines) {\n      const row = Math.floor(Math.random() * rows);\n      const column = Math.floor(Math.random() * columns);\n\n      if (!boardWithMines[row][column].isMine) {\n        boardWithMines[row][column].isMine = true;\n        mines = mines - 1;\n      }\n    }\n\n    return boardWithMines;\n  }\n\n  setValues(board) {\n    const { rows, columns } = this.props;\n    const boardWithValues = [...board];\n\n    for (let i = 0; i < rows; i++) {\n      for (let j = 0; j < columns; j++) {\n        const cell = boardWithValues[i][j];\n        if (!cell.isMine) {\n          const adjacentCells = this.getAdjacentCells(board, i, j);\n          const numberOfMinesAround = adjacentCells.filter((cell) => cell.isMine === true).length;\n  \n          if (numberOfMinesAround) {\n            cell.value = numberOfMinesAround;\n          }\n        }\n      }\n    }\n\n    return boardWithValues;\n  }\n\n  getAdjacentCells(board, row, column) {\n    const adjacentCells = [];\n\n    for (let dx = -1; dx <= 1; ++dx) {\n      for (let dy = -1; dy <= 1; ++dy) {\n          const cell = board[row + dx] ? board[row + dx][column + dy] : null;\n          if (cell && (dx !== 0 || dy !== 0)) {\n            adjacentCells.push(cell);\n          }\n      }\n    }\n\n    return adjacentCells;\n  }\n\n  drawBoard() {\n    const { board } = this.state;\n\n    return (\n      <React.Fragment>\n        {board && board.map((row, rowIndex) => (\n          <div className=\"row\" key={'row_' + rowIndex}>\n            {row.map((cell, cellIndex) => (\n              <Cell key={'cell_' + cellIndex} x={rowIndex} y={cellIndex} value={cell.value} isOpened={cell.isOpened} isMarked={cell.isMarked} isMine={cell.isMine} onCellClick={this.handleCellClick} />\n            ))}\n          </div>\n        ))}\n      </React.Fragment>\n    );\n  }\n\n  endGame() {\n    const { board } = this.state;\n    const { rows, columns } = this.props;\n    \n    const updatedBoard = [...board];\n\n    for (let i = 0; i < rows; i++) {\n      for (let j = 0; j < columns; j++) {\n        updatedBoard[i][j].isOpened = true;\n      }\n    }\n\n    this.setState({\n      board: updatedBoard,\n      isGameOver: true\n    });\n  }\n\n  handleCellClick(type, row, column) {\n    const { board, isGameOver, markersLeft } = this.state;\n\n    if (isGameOver) {\n      return;\n    }\n\n    let modifiedBoard = [...board];\n    const cell = modifiedBoard[row][column]\n    const { isOpened, isMine, isMarked } = cell;\n\n    if (type === 'click' && !isMarked) {\n      if (isMine) {\n        this.endGame();\n        return;\n      } else {\n        modifiedBoard = this.openCell(modifiedBoard, row, column);\n      }\n    }\n\n    if (type === 'contextmenu' && (!isOpened || isMarked)) {\n      if (isMarked || markersLeft > 0)\n        cell.isMarked = !cell.isMarked;\n    }\n\n    this.setState({\n      board: modifiedBoard\n    })\n\n    this.examineBoard();\n  }\n\n  openCell(board, row, column) {\n    const { rows, columns } = this.props;\n\n    if (row >= rows || column >= columns || row < 0 || column < 0) {\n      return board;\n    }\n\n    const modifiedBoard = [...board];\n    const cell = modifiedBoard[row][column];\n\n    if (cell.isOpened) {\n      return board;\n    }\n\n    cell.isOpened = true;\n\n    if (!cell.value) {\n      this.openCell(modifiedBoard, row - 1, column);\n      this.openCell(modifiedBoard, row + 1, column);\n      this.openCell(modifiedBoard, row, column - 1);\n      this.openCell(modifiedBoard, row, column + 1);\n    }\n\n    return modifiedBoard;\n  }\n\n  examineBoard() {\n    const { board } = this.state;\n    const { mines } = this.props;\n    let markersLeft = null;\n    let isWon = false;\n\n    const cells = board.flat();\n    const cellsCount = cells.length;\n    const numberOfMarked = cells.filter((cell) => cell.isMarked === true).length;\n    const numberOfOpened = cells.filter((cell) => cell.isOpened === true).length;\n\n    markersLeft = mines - numberOfMarked;\n    if (cellsCount === (numberOfMarked + numberOfOpened)) {\n      isWon = true;\n    }\n\n    this.setState({\n      markersLeft,\n      isWon\n    });\n  }\n\n  goToMenu() {\n    const { changeGameState } = this.props;\n    changeGameState('menu');\n  }\n\n  render() {\n    const { isWon, isGameOver, markersLeft } = this.state;\n    const isGameRunning = !isGameOver && !isWon;\n\n    return (\n      <React.Fragment>\n        <div className=\"game-header\">\n          <button className=\"button button--icon game-header__left\" onClick={this.goToMenu}>←</button>\n          {isWon && <span className=\"game-header__center\">You won!</span>}\n          {isGameOver && <span className=\"game-header__center\">You lost!</span>}\n          <span className=\"game-header__right\">Markers left: {markersLeft}</span>\n        </div>\n        <div className=\"game-content\">\n          {this.drawBoard()}\n        </div>\n        <div className=\"game-footer\">\n          {isGameRunning &&\n            <React.Fragment>\n              <span>Open cell</span>\n              <img className=\"icon\" src={mouseImage} alt=\"\"></img>\n              <span>Mark mine</span>\n            </React.Fragment>\n          }\n          {!isGameRunning && (\n            <React.Fragment>\n              <button className=\"button button--primary game__button\" onClick={this.goToMenu}>\n                New Game\n              </button>\n              <button className=\"button button--secondary game__button\" onClick={this.startGame}>\n                Restart\n              </button>\n            </React.Fragment>\n          )}\n        </div>\n      </React.Fragment>\n    );\n  }\n}\n\nexport default Board;","import React from 'react';\nimport './css/styles.css';\nimport Menu from './components/Menu';\nimport Board from './components/Board';\n\nclass Minesweeper extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      config: {\n        difficulty: null,\n        size: null\n      },\n      gameState: 'menu'\n    }\n\n    this.startGame = this.startGame.bind(this);\n    this.changeGameState = this.changeGameState.bind(this);\n  }\n\n  startGame(config) {\n    this.setState({\n      config\n    });\n    this.changeGameState('game');\n  }\n\n  changeGameState(newGameState) {\n    this.setState({\n      gameState: newGameState\n    });\n  }\n\n  render() {\n    const { config, gameState } = this.state;\n    const isMenu = gameState === 'menu';\n    const isGame = gameState === 'game';\n\n    return (\n      <div className=\"minesweeper\">\n          {isMenu && <Menu startGame={this.startGame} />}\n          {isGame && <Board rows={config.size} columns={config.size} mines={config.difficulty} changeGameState={this.changeGameState} />}\n      </div>\n    );\n  }\n}\n\nexport default Minesweeper;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './css/index.css';\nimport Minesweeper from './Minesweeper';\n\nReactDOM.render(<Minesweeper />, document.getElementById('root'));\n"],"sourceRoot":""}